"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("pages/index",{

/***/ "./lib/implementations.js":
/*!********************************!*\
  !*** ./lib/implementations.js ***!
  \********************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

eval(__webpack_require__.ts("// Define all the available implementations\n\nconst implementations = [\n    {\n        id: \"basic\",\n        name: \"Individual RPC Calls\",\n        description: \"Makes individual RPC calls for each token and holder. Queries token ownership with direct contract calls and ETH balances one-by-one. Simplest but slowest method.\",\n        status: \"implemented\",\n        source: \"/api/implementations/basic\"\n    },\n    {\n        id: \"multicall\",\n        name: \"Hybrid Graph+Multicall\",\n        description: \"Uses The Graph for token ownership data and Multicall contracts to batch ETH balance requests in a single call. Combines efficiency of both approaches.\",\n        status: \"implemented\",\n        source: \"/api/implementations/multicall\"\n    },\n    {\n        id: \"pure-multicall\",\n        name: \"Full Multicall Implementation\",\n        description: \"Uses only Multicall contracts for both token ownership lookups and ETH balance fetching without any external services. Queries everything directly from the Ethereum network in efficient batches.\",\n        status: \"implemented\",\n        source: \"/api/implementations/pure-multicall\"\n    }\n];\n// Helper function to get implementation by ID\nconst getImplementationById = (id)=>{\n    return implementations.find((impl)=>impl.id === id) || null;\n};\n// Helper function to get only implemented methods\nconst getImplementedMethods = ()=>{\n    return implementations.filter((impl)=>impl.status === \"implemented\");\n};\n// Helper function to get planned methods\nconst getPlannedMethods = ()=>{\n    return implementations.filter((impl)=>impl.status === \"planned\");\n};\nmodule.exports = {\n    implementations,\n    getImplementationById,\n    getImplementedMethods,\n    getPlannedMethods\n};\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9saWIvaW1wbGVtZW50YXRpb25zLmpzIiwibWFwcGluZ3MiOiJBQUFBLDJDQUEyQzs7QUFDM0MsTUFBTUEsa0JBQWtCO0lBQ3RCO1FBQ0VDLElBQUk7UUFDSkMsTUFBTTtRQUNOQyxhQUFhO1FBQ2JDLFFBQVE7UUFDUkMsUUFBUTtJQUNWO0lBQ0E7UUFDRUosSUFBSTtRQUNKQyxNQUFNO1FBQ05DLGFBQWE7UUFDYkMsUUFBUTtRQUNSQyxRQUFRO0lBQ1Y7SUFDQTtRQUNFSixJQUFJO1FBQ0pDLE1BQU07UUFDTkMsYUFBYTtRQUNiQyxRQUFRO1FBQ1JDLFFBQVE7SUFDVjtDQUNEO0FBRUQsOENBQThDO0FBQzlDLE1BQU1DLHdCQUF3QixDQUFDTDtJQUM3QixPQUFPRCxnQkFBZ0JPLElBQUksQ0FBQ0MsQ0FBQUEsT0FBUUEsS0FBS1AsRUFBRSxLQUFLQSxPQUFPO0FBQ3pEO0FBRUEsa0RBQWtEO0FBQ2xELE1BQU1RLHdCQUF3QjtJQUM1QixPQUFPVCxnQkFBZ0JVLE1BQU0sQ0FBQ0YsQ0FBQUEsT0FBUUEsS0FBS0osTUFBTSxLQUFLO0FBQ3hEO0FBRUEseUNBQXlDO0FBQ3pDLE1BQU1PLG9CQUFvQjtJQUN4QixPQUFPWCxnQkFBZ0JVLE1BQU0sQ0FBQ0YsQ0FBQUEsT0FBUUEsS0FBS0osTUFBTSxLQUFLO0FBQ3hEO0FBRUFRLE9BQU9DLE9BQU8sR0FBRztJQUNmYjtJQUNBTTtJQUNBRztJQUNBRTtBQUNGIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL2xpYi9pbXBsZW1lbnRhdGlvbnMuanM/MzVmNyJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyBEZWZpbmUgYWxsIHRoZSBhdmFpbGFibGUgaW1wbGVtZW50YXRpb25zXG5jb25zdCBpbXBsZW1lbnRhdGlvbnMgPSBbXG4gIHtcbiAgICBpZDogJ2Jhc2ljJyxcbiAgICBuYW1lOiAnSW5kaXZpZHVhbCBSUEMgQ2FsbHMnLFxuICAgIGRlc2NyaXB0aW9uOiAnTWFrZXMgaW5kaXZpZHVhbCBSUEMgY2FsbHMgZm9yIGVhY2ggdG9rZW4gYW5kIGhvbGRlci4gUXVlcmllcyB0b2tlbiBvd25lcnNoaXAgd2l0aCBkaXJlY3QgY29udHJhY3QgY2FsbHMgYW5kIEVUSCBiYWxhbmNlcyBvbmUtYnktb25lLiBTaW1wbGVzdCBidXQgc2xvd2VzdCBtZXRob2QuJyxcbiAgICBzdGF0dXM6ICdpbXBsZW1lbnRlZCcsXG4gICAgc291cmNlOiAnL2FwaS9pbXBsZW1lbnRhdGlvbnMvYmFzaWMnLFxuICB9LFxuICB7XG4gICAgaWQ6ICdtdWx0aWNhbGwnLFxuICAgIG5hbWU6ICdIeWJyaWQgR3JhcGgrTXVsdGljYWxsJyxcbiAgICBkZXNjcmlwdGlvbjogJ1VzZXMgVGhlIEdyYXBoIGZvciB0b2tlbiBvd25lcnNoaXAgZGF0YSBhbmQgTXVsdGljYWxsIGNvbnRyYWN0cyB0byBiYXRjaCBFVEggYmFsYW5jZSByZXF1ZXN0cyBpbiBhIHNpbmdsZSBjYWxsLiBDb21iaW5lcyBlZmZpY2llbmN5IG9mIGJvdGggYXBwcm9hY2hlcy4nLFxuICAgIHN0YXR1czogJ2ltcGxlbWVudGVkJyxcbiAgICBzb3VyY2U6ICcvYXBpL2ltcGxlbWVudGF0aW9ucy9tdWx0aWNhbGwnLFxuICB9LFxuICB7XG4gICAgaWQ6ICdwdXJlLW11bHRpY2FsbCcsXG4gICAgbmFtZTogJ0Z1bGwgTXVsdGljYWxsIEltcGxlbWVudGF0aW9uJyxcbiAgICBkZXNjcmlwdGlvbjogJ1VzZXMgb25seSBNdWx0aWNhbGwgY29udHJhY3RzIGZvciBib3RoIHRva2VuIG93bmVyc2hpcCBsb29rdXBzIGFuZCBFVEggYmFsYW5jZSBmZXRjaGluZyB3aXRob3V0IGFueSBleHRlcm5hbCBzZXJ2aWNlcy4gUXVlcmllcyBldmVyeXRoaW5nIGRpcmVjdGx5IGZyb20gdGhlIEV0aGVyZXVtIG5ldHdvcmsgaW4gZWZmaWNpZW50IGJhdGNoZXMuJyxcbiAgICBzdGF0dXM6ICdpbXBsZW1lbnRlZCcsXG4gICAgc291cmNlOiAnL2FwaS9pbXBsZW1lbnRhdGlvbnMvcHVyZS1tdWx0aWNhbGwnLFxuICB9XG5dO1xuXG4vLyBIZWxwZXIgZnVuY3Rpb24gdG8gZ2V0IGltcGxlbWVudGF0aW9uIGJ5IElEXG5jb25zdCBnZXRJbXBsZW1lbnRhdGlvbkJ5SWQgPSAoaWQpID0+IHtcbiAgcmV0dXJuIGltcGxlbWVudGF0aW9ucy5maW5kKGltcGwgPT4gaW1wbC5pZCA9PT0gaWQpIHx8IG51bGw7XG59O1xuXG4vLyBIZWxwZXIgZnVuY3Rpb24gdG8gZ2V0IG9ubHkgaW1wbGVtZW50ZWQgbWV0aG9kc1xuY29uc3QgZ2V0SW1wbGVtZW50ZWRNZXRob2RzID0gKCkgPT4ge1xuICByZXR1cm4gaW1wbGVtZW50YXRpb25zLmZpbHRlcihpbXBsID0+IGltcGwuc3RhdHVzID09PSAnaW1wbGVtZW50ZWQnKTtcbn07XG5cbi8vIEhlbHBlciBmdW5jdGlvbiB0byBnZXQgcGxhbm5lZCBtZXRob2RzXG5jb25zdCBnZXRQbGFubmVkTWV0aG9kcyA9ICgpID0+IHtcbiAgcmV0dXJuIGltcGxlbWVudGF0aW9ucy5maWx0ZXIoaW1wbCA9PiBpbXBsLnN0YXR1cyA9PT0gJ3BsYW5uZWQnKTtcbn07XG5cbm1vZHVsZS5leHBvcnRzID0ge1xuICBpbXBsZW1lbnRhdGlvbnMsXG4gIGdldEltcGxlbWVudGF0aW9uQnlJZCxcbiAgZ2V0SW1wbGVtZW50ZWRNZXRob2RzLFxuICBnZXRQbGFubmVkTWV0aG9kc1xufTsgIl0sIm5hbWVzIjpbImltcGxlbWVudGF0aW9ucyIsImlkIiwibmFtZSIsImRlc2NyaXB0aW9uIiwic3RhdHVzIiwic291cmNlIiwiZ2V0SW1wbGVtZW50YXRpb25CeUlkIiwiZmluZCIsImltcGwiLCJnZXRJbXBsZW1lbnRlZE1ldGhvZHMiLCJmaWx0ZXIiLCJnZXRQbGFubmVkTWV0aG9kcyIsIm1vZHVsZSIsImV4cG9ydHMiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./lib/implementations.js\n"));

/***/ })

});